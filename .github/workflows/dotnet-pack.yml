# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository being compiled
      uses: actions/checkout@v3
      with:
        path: Repo
    - name: Checkout the Packages repository alongside the one being compiled
      uses: actions/checkout@v3
      with:
        repository: dgmjr-io/Packages
        path: Packages
    - name: Run setup-dgmjrsdk
      uses: dgmjr-actions/setup-dgmjrsdk@main
      with:
        git-token: ${{ secrets.GITHUB_TOKEN }}
        environment: Release
        git-nuget-endpoint: ${{ vars.GIT_NUGET_ENDPOINT }}
        private-nuget-endpoint: ${{ vars.PROGET_ENDPOINT_URL }}
        private-nuget-api-key: ${{ secrets.PROGET_API_KEY }}
    - name: Restore dependencies
      run: dotnet restore Repo/NuGetPush.nuproj
    - name: Build
      run: dotnet build Repo/NuGetPush.nuproj --no-restore -c:Release
    - name: Upload the NuGet Package
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: NuGetPackage
        # A file, directory or wildcard pattern that describes what to upload
        path: "**/*.nupkg"
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        retention-days: 1
        
  push-nuget:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Run setup-dgmjrsdk
      uses: dgmjr-actions/setup-dgmjrsdk@main
      with:
        git-token: ${{ secrets.GITHUB_TOKEN }}
        environment: Release
        git-nuget-endpoint: ${{ vars.GIT_NUGET_ENDPOINT }}
        private-nuget-endpoint: ${{ vars.PROGET_ENDPOINT_URL }}
        private-nuget-api-key: ${{ secrets.PROGET_API_KEY }}
    - name: Download NuGet Package
      uses: actions/download-artifact@v2.1.1
      with:
        name: NuGetPackage
    # - name: Publish NuGet to GitHub
      # shell: bash
      # run: dotnet nuget push **/*.nupkg --source GitHub --api-key ${{ secrets.GITHUB_TOKEN }}
    - name: Publish NuGet DGMJR-IO private feed
      shell: bash
      run: dotnet nuget push **/*.nupkg --source dgmjr-io --api-key ${{ secrets.PROGET_API_KEY }}
      

  
