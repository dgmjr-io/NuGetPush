# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Package the package

concurrency:
  group: CI-build
  cancel-in-progress: true
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Build
      uses: dgmjr-actions/build-using-dgmjrsdk@main
      with:
        configuration: Release
        git-token: ${{ secrets.GITHUB_TOKEN }}
        git-username: dgmjr
        git-nuget-endpoint: ${{ vars.GIT_NUGET_ENDPOINT }}
        private-nuget-endpoint: ${{ vars.PROGET_ENDPOINT_URL }}
        private-nuget-api-key: ${{ secrets.PROGET_API_KEY }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        repo: dgmjr-io/NuGetPush
        project-file-path: NuGetPush.nuproj

    - name: Push
      uses: dgmjr-actions/nuget-push@main
      with:
        configuration: Release
        git-token: ${{ secrets.GITHUB_TOKEN }}
        git-username: dgmjr
        git-nuget-endpoint: ${{ vars.GIT_NUGET_ENDPOINT }}
        private-nuget-endpoint: ${{ vars.PROGET_ENDPOINT_URL }}
        private-nuget-api-key: ${{ secrets.PROGET_API_KEY }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        repo: dgmjr-io/NuGetPush
        project-file-path: NuGetPush.nuproj
        push-github: true
        push-dgmjr-io: true
        push-nuget: false

  CleanUp:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Clean up build artifacts
      uses: dgmjr-actions/cleanup-build-artifacts@main
    

        
