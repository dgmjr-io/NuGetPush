<!--
 * Sdk.targets
 *
 *   Created: 2022-11-27-05:39:27
 *   Modified: 2022-12-05-04:12:25
 *
 *   Author: David G. Moore, Jr. <david@dgmjr.io>
 *
 *   Copyright Â© 2022-2023 David G. Moore, Jr., All Rights Reserved
 *      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project>
  <Target Name="PushAzure" DependsOnTargets="Pack;MinVer" Condition="'$(GeneratePackageOnBuild)' == 'true'">
    <Exec Command="nuget search $(PackageId) -s Azure -noninteractive | grep $(PackageVersion)" IgnoreExitCode="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="PackageExists" />
    </Exec>
    <Exec Command="echo 'Deleting package $(PackageId) $(PackageVersion) from Azure...';" IgnoreExitCode="true"
      Condition="'$(PackageExists)' != ''" />
    <Exec Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s Azure --non-interactive -k 'az'" IgnoreExitCode="true"
      Condition="'$(PackageExists)' != ''" />
    <Exec Command="dotnet nuget push $(PackageTargetPath) -s Azure -k 'az' --skip-duplicate" Condition="Exists('$(PackageTargetPath)')" />
  </Target>

  <Target Name="PushProGetPrerelease" DependsOnTargets="Pack;MinVer" Condition="'$(GeneratePackageOnBuild)' == 'true'">
    <Exec Command="echo 'Deleting package $(PackageId) $(PackageVersion) from ProGet...';" IgnoreExitCode="true"
      Condition="'$(PackageExists)' != ''" />
    <Exec Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s ProGetPrerelease --non-interactive -k 'az'" IgnoreExitCode="true"
      Condition="'$(PackageExists)' != ''" />
    <Exec Command="dotnet nuget push $(PackageTargetPath) -s Azure -k 'az' --skip-duplicate" Condition="Exists('$(PackageTargetPath)')" />
  </Target>

  <Target Name="EnsureGitHubToken" DependsOnTargets="Pack;MinVer" Condition="'$(GeneratePackageOnBuild)' == 'true'">
    <Exec Command="gh auth token" ConsoleToMSBuild="true" IgnoreExitCode="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitHubAuthToken" />
    </Exec>
    <Error Condition="'$(GitHubAuthToken)' == '' Or '$(GitHubAuthToken)' == 'undefined'" Text="You must first set the GitHub auth token by running 'gh auth login'" Code="GHPUSH001" HelpLink="https://cli.github.com/manual/gh_auth_login" />
  </Target>

  <Target Name="PushGitHub" DependsOnTargets="EnsureGitHubToken" Condition="'$(GeneratePackageOnBuild)' == 'true'">
    <PropertyGroup>
      <DeleteGitHubPackageVersionScript>$(DeleteGitHubPackageVersionScriptName) --org "dgmjr-io" -i "$(PackageId)" -v "$(PackageVersion)" --t nuget --token "$(GitHubAuthToken)"</DeleteGitHubPackageVersionScript>
    </PropertyGroup>
    <Message Text="echo 'DeleteGitHubPackageVersionScript: $(DeleteGitHubPackageVersionScript)' "  />
    <Exec Command="$(DeleteGitHubPackageVersionScript)"  ContinueOnError="true" IgnoreExitCode="true" />
    <Exec Command="dotnet nuget push $(PackageTargetPath) -s GitHub -k $(GitHubAuthToken) --skip-duplicate" Condition="Exists('$(PackageTargetPath)')" IgnoreExitCode="true" />
  </Target>

  <Target Name="PushLocal" AfterTargets="Pack" DependsOnTargets="Pack;GetPackageVersion" Condition="'$(GeneratePackageOnBuild)' == 'true' And '$(DesignTimeBuild)' != 'true' And ('$(Configuration)' == 'Local' Or $(InitialTargets.Contains('PushLocal')))">
    <Exec Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s Local --non-interactive" ContinueOnError="true" IgnoreExitCode="true" />
    <Exec Command="dotnet nuget push $(PackageTargetPath) -s Local --skip-duplicate" Condition="Exists('$(PackageTargetPath)')" IgnoreExitCode="true" />
  </Target>
</Project>
